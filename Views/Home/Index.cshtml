@model IEnumerable<RentalService.Models.AdPost>
@{
    ViewData["Title"] = "Trang Chủ";
    var isCustomer = User?.Identity != null && User.Identity.IsAuthenticated && (User.FindFirst("role")?.Value == "customer");
}
<!-- TODO: Filter/sort quảng cáo theo gói, badge, ưu tiên, v.v. -->
<div class="container mt-4">
    <h2 class="mb-4">Bài viết nổi bật</h2>
    <div class="row">
        @if (Model != null && Model.Any())
        {
            var kimCuongAds = Model.Where(ad => ad.PackageType == RentalService.Models.AdPackageType.KimCuong).ToList();
            var vangAds = Model.Where(ad => ad.PackageType == RentalService.Models.AdPackageType.Vang).ToList();
            var dongAds = Model.Where(ad => ad.PackageType == RentalService.Models.AdPackageType.Dong || ad.PackageType == RentalService.Models.AdPackageType.Free || ad.PackageType == RentalService.Models.AdPackageType.Bac).ToList();

            // Kim Cương: full width, nổi bật
            foreach (var ad in kimCuongAds)
            {
                var images = !string.IsNullOrEmpty(ad.ImageUrls) ? ad.ImageUrls.Split(',') : new string[0];
                var activeRooms = ad.Rooms != null ? ad.Rooms.Where(r => r.Status == RentalService.Models.RoomStatus.Active).ToList() : new List<RentalService.Models.Room>();
                var minPrice = activeRooms.Any() ? activeRooms.Min(r => r.Price) : 0;
                var maxPrice = activeRooms.Any() ? activeRooms.Max(r => r.Price) : 0;
                <div class="col-12 mb-4">
                    <div class="card h-100 shadow-lg diamond-ad-card clickable-card position-relative" tabindex="0" onclick="window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })'" onkeydown="if(event.key==='Enter'){window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })';}">
                        <div class="row g-0 align-items-stretch">
                            <div class="col-md-5">
                                <div class="diamond-gallery-2row gallery-flex" style="height:calc(50vh - 32px);min-height:calc(50vh - 32px);display:flex;padding:16px 0 0 16px;">
                                    <div class="main-img-rect me-2" style="width:50%;height:100%;position:relative;">
                                        @if (images.Length > 0 && !string.IsNullOrEmpty(images[0]))
                                        {
                                            <img src="@images[0]" class="img-fluid rounded-start main-img" style="width:100%;height:100%;object-fit:cover;" alt="Ad Image" onerror="this.onerror=null;this.src='/images/no-image.png';" />
                                        }
                                        else
                                        {
                                            <img src="/images/no-image.png" class="img-fluid rounded-start main-img" style="width:100%;height:100%;object-fit:cover;" alt="No Image" />
                                        }
                                    </div>
                                    <div class="side-thumbs-grid" style="width:50%;height:100%;display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr 1fr;gap:2px;">
                                        @for (int i = 1; i < Math.Min(images.Length, 5); i++)
                                        {
                                            var isLastThumb = (i == 4) && (images.Length > 5);
                                            <div class="side-thumb-rect position-relative">
                                                <img src="@images[i]" class="img-fluid side-thumb-img" alt="Ad Thumb" onerror="this.onerror=null;this.src='/images/no-image.png';" />
                                                @if (isLastThumb)
                                                {
                                                    <div class="thumb-overlay">+@((images.Length-5+1).ToString())</div>
                                                }
                                            </div>
                                        }
                                        @for (int j = images.Length; j < 5; j++)
                                        {
                                            <div class="side-thumb-rect"></div>
                                        }
                                    </div>
                                </div>
                                <div class="d-flex justify-content-between align-items-end w-100 mt-auto pt-2 px-1 text-primary-emphasis small fw-bold" style="min-height:28px;">
                                    <span class="text-muted small">@ad.CreatedAt.ToString("dd/MM/yyyy")</span>
                                    <span>
                                        <i class="fa fa-eye"></i> @ad.ViewCount lượt xem
                                        <span class="ms-3"><i class="fa fa-door-open"></i> @activeRooms.Count phòng còn trống</span>
                                    </span>
                                </div>
                                
                            </div>
                            <div class="col-md-7 p-3 d-flex flex-column justify-content-between">
                                <div>
                                    <h3 class="card-title mb-2" style="color:#0056b3;font-weight:bold;">@ad.Title</h3>
                                    <span class="badge @GetPackageBadgeClass(ad.PackageType) me-2">@RentalService.Models.AdPackageTypeExtensions.ToVietnameseLabel(ad.PackageType)</span>
                                    <span class="badge bg-primary me-2">@ad.Badge</span>
                                    <div class="diamond-price-v2 mt-2 mb-2 text-success fw-bold" style="font-size:1.08em;">
                                    @if (minPrice > 0 && maxPrice > 0)
                                    {
                                        <span>@minPrice.ToString("N0")@(minPrice != maxPrice ? $" - {maxPrice.ToString("N0")}" : "") đ</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Liên hệ giá</span>
                                    }
                                </div>
                                    <div class="ad-content-html mt-2 mb-2" style="max-height:220px;">@Html.Raw(ad.Content?.Length > 500 ? ad.Content.Substring(0, 500) + "..." : ad.Content)</div>
                                    
                                    @if (ad.Content != null && ad.Content.Length > 500)
                                    {
                                        <a href="@Url.Action("Details", "AdPosts", new { id = ad.Id })" class="btn btn-link p-0 ps-1 pb-1 small text-decoration-underline text-primary fw-bold">Xem thêm</a>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="diamond-effect"></div>
                    </div>
                </div>
            }

            // Vàng: 6 column, UI mới đẹp, hiện đại
            foreach (var ad in vangAds)
            {
                var images = !string.IsNullOrEmpty(ad.ImageUrls) ? ad.ImageUrls.Split(',') : new string[0];
                var activeRooms = ad.Rooms != null ? ad.Rooms.Where(r => r.Status == RentalService.Models.RoomStatus.Active).ToList() : new List<RentalService.Models.Room>();
                var minPrice = activeRooms.Any() ? activeRooms.Min(r => r.Price) : 0;
                var maxPrice = activeRooms.Any() ? activeRooms.Max(r => r.Price) : 0;
                <div class="col-md-6 mb-4">
                    <div class="card gold-ad-card-v2 h-100 clickable-card position-relative" tabindex="0" onclick="window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })'" onkeydown="if(event.key==='Enter'){window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })';}">
                        <div class="gold-img-wrap-v2">
                            @if (images.Length > 0 && !string.IsNullOrEmpty(images[0]))
                            {
                                <img src="@images[0]" class="gold-img-v2" alt="Ad Image" onerror="this.onerror=null;this.src='/images/no-image.png';" />
                            }
                            else
                            {
                                <img src="/images/no-image.png" class="gold-img-v2" alt="No Image" />
                            }
                        </div>
                        <div class="card-body p-3 d-flex flex-column justify-content-between">
                            <div>
                                <h4 class="card-title gold-title-v2 mb-1">@ad.Title</h4>
                                <div class="mb-2">
                                    <span class="badge @GetPackageBadgeClass(ad.PackageType) me-2">@RentalService.Models.AdPackageTypeExtensions.ToVietnameseLabel(ad.PackageType)</span>
                                    <span class="badge bg-primary me-2">@ad.Badge</span>
                                </div>
                                <div class="gold-price-v2 mb-2">
                                    @if (minPrice > 0 && maxPrice > 0)
                                    {
                                        <span class="text-success fw-bold">@minPrice.ToString("N0")@(minPrice != maxPrice ? $" - {maxPrice.ToString("N0")}" : "") đ</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Liên hệ giá</span>
                                    }
                                </div>
                                <div class="ad-content-html gold-content-v2 mb-2">@Html.Raw(ad.Content?.Length > 260 ? ad.Content.Substring(0, 260) + "..." : ad.Content)</div>
                                @if (ad.Content != null && ad.Content.Length > 260)
                                {
                                    <a href="@Url.Action("Details", "AdPosts", new { id = ad.Id })" class="btn btn-link p-0 ps-1 pb-1 small text-decoration-underline text-primary fw-bold">Xem thêm</a>
                                }
                            </div>
                            <div class="d-flex justify-content-between align-items-center w-100 mt-2 pt-1 gold-info-v2">
                                <span class="text-muted small"><i class="fa fa-calendar-alt me-1"></i>@ad.CreatedAt.ToString("dd/MM/yyyy")</span>
                                <span class="text-dark small fw-bold">
                                    <i class="fa fa-eye me-1"></i>@ad.ViewCount
                                    <span class="ms-3"><i class="fa fa-door-open me-1"></i>@activeRooms.Count</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }

            // Đồng & các gói còn lại: 4 column, ảnh trên, text dưới, thêm ngày, view, phòng, giá min-max
            foreach (var ad in dongAds)
            {
                var images = !string.IsNullOrEmpty(ad.ImageUrls) ? ad.ImageUrls.Split(',') : new string[0];
                var activeRooms = ad.Rooms != null ? ad.Rooms.Where(r => r.Status == RentalService.Models.RoomStatus.Active).ToList() : new List<RentalService.Models.Room>();
                var minPrice = activeRooms.Any() ? activeRooms.Min(r => r.Price) : 0;
                var maxPrice = activeRooms.Any() ? activeRooms.Max(r => r.Price) : 0;
                <div class="col-md-4 mb-4">
                    <div class="card bronze-ad-card h-100 clickable-card position-relative" tabindex="0" onclick="window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })'" onkeydown="if(event.key==='Enter'){window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })';}">
                        <div class="bronze-img-wrap">
                            @if (images.Length > 0 && !string.IsNullOrEmpty(images[0]))
                            {
                                <img src="@images[0]" class="bronze-img" alt="Ad Image" onerror="this.onerror=null;this.src='/images/no-image.png';" />
                            }
                            else
                            {
                                <img src="/images/no-image.png" class="bronze-img" alt="No Image" />
                            }
                        </div>
                        <div class="card-body p-3 d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title bronze-title-v2 mb-1">@ad.Title</h5>
                                <div class="mb-2">
                                    <span class="badge @GetPackageBadgeClass(ad.PackageType) me-2">@RentalService.Models.AdPackageTypeExtensions.ToVietnameseLabel(ad.PackageType)</span>
                                    <span class="badge bg-primary me-2">@ad.Badge</span>
                                </div>
                                <div class="bronze-price-v2 mb-2">
                                    @if (minPrice > 0 && maxPrice > 0)
                                    {
                                        <span class="text-success fw-bold">@minPrice.ToString("N0")@(minPrice != maxPrice ? $" - {maxPrice.ToString("N0")}" : "") đ</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Liên hệ giá</span>
                                    }
                                </div>
                                <div class="ad-content-html bronze-content-v2 mb-2">@Html.Raw(ad.Content?.Length > 120 ? ad.Content.Substring(0, 120) + "..." : ad.Content)</div>
                                @if (ad.Content != null && ad.Content.Length > 120)
                                {
                                    <a href="@Url.Action("Details", "AdPosts", new { id = ad.Id })" class="btn btn-link p-0 ps-1 pb-1 small text-decoration-underline text-primary fw-bold">Xem thêm</a>
                                }
                            </div>
                            <div class="d-flex justify-content-between align-items-center w-100 mt-2 pt-1 bronze-info-v2">
                                <span class="text-muted small"><i class="fa fa-calendar-alt me-1"></i>@ad.CreatedAt.ToString("dd/MM/yyyy")</span>
                                <span class="text-dark small fw-bold">
                                    <i class="fa fa-eye me-1"></i>@ad.ViewCount
                                    <span class="ms-3"><i class="fa fa-door-open me-1"></i>@activeRooms.Count</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }

            // Bạc: 4 column, giống Đồng nhưng nằm phía trên Đồng
            var bacAds = Model.Where(ad => ad.PackageType == RentalService.Models.AdPackageType.Bac).ToList();
            foreach (var ad in bacAds)
            {
                var images = !string.IsNullOrEmpty(ad.ImageUrls) ? ad.ImageUrls.Split(',') : new string[0];
                var activeRooms = ad.Rooms != null ? ad.Rooms.Where(r => r.Status == RentalService.Models.RoomStatus.Active).ToList() : new List<RentalService.Models.Room>();
                var minPrice = activeRooms.Any() ? activeRooms.Min(r => r.Price) : 0;
                var maxPrice = activeRooms.Any() ? activeRooms.Max(r => r.Price) : 0;
                <div class="col-md-4 mb-4">
                    <div class="card silver-ad-card h-100 clickable-card position-relative" tabindex="0" onclick="window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })'" onkeydown="if(event.key==='Enter'){window.location='@Url.Action("Details", "AdPosts", new { id = ad.Id })';}">
                        <div class="silver-img-wrap">
                            @if (images.Length > 0 && !string.IsNullOrEmpty(images[0]))
                            {
                                <img src="@images[0]" class="silver-img" alt="Ad Image" onerror="this.onerror=null;this.src='/images/no-image.png';" />
                            }
                            else
                            {
                                <img src="/images/no-image.png" class="silver-img" alt="No Image" />
                            }
                        </div>
                        <div class="card-body p-3 d-flex flex-column justify-content-between">
                            <div>
                                <h5 class="card-title silver-title-v2 mb-1">@ad.Title</h5>
                                <div class="mb-2">
                                    <span class="badge @GetPackageBadgeClass(ad.PackageType) me-2">@RentalService.Models.AdPackageTypeExtensions.ToVietnameseLabel(ad.PackageType)</span>
                                    <span class="badge bg-primary me-2">@ad.Badge</span>
                                </div>
                                <div class="silver-price-v2 mb-2">
                                    @if (minPrice > 0 && maxPrice > 0)
                                    {
                                        <span class="text-success fw-bold">@minPrice.ToString("N0")@(minPrice != maxPrice ? $" - {maxPrice.ToString("N0")}" : "") đ</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Liên hệ giá</span>
                                    }
                                </div>
                                <div class="ad-content-html silver-content-v2 mb-2">@Html.Raw(ad.Content?.Length > 120 ? ad.Content.Substring(0, 120) + "..." : ad.Content)</div>
                                @if (ad.Content != null && ad.Content.Length > 120)
                                {
                                    <a href="@Url.Action("Details", "AdPosts", new { id = ad.Id })" class="btn btn-link p-0 ps-1 pb-1 small text-decoration-underline text-primary fw-bold">Xem thêm</a>
                                }
                            </div>
                            <div class="d-flex justify-content-between align-items-center w-100 mt-2 pt-1 silver-info-v2">
                                <span class="text-muted small"><i class="fa fa-calendar-alt me-1"></i>@ad.CreatedAt.ToString("dd/MM/yyyy")</span>
                                <span class="text-dark small fw-bold">
                                    <i class="fa fa-eye me-1"></i>@ad.ViewCount
                                    <span class="ms-3"><i class="fa fa-door-open me-1"></i>@activeRooms.Count</span>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center text-muted">Chưa có bài quảng cáo nào.</div>
        }
    </div>
    <!-- TODO: Thêm filter/sort UI, phân trang nếu cần -->
</div>

@functions {
    private string GetPackageBadgeClass(RentalService.Models.AdPackageType pkg)
    {
        return pkg switch
        {
            RentalService.Models.AdPackageType.Dong => "bg-primary text-white",
            RentalService.Models.AdPackageType.Bac => "bg-secondary text-white",
            RentalService.Models.AdPackageType.Vang => "bg-warning text-dark",
            RentalService.Models.AdPackageType.KimCuong => "bg-info text-white",
            _ => "bg-light text-dark"
        };
    }
}

<style>
    .diamond-ad-card {
        border: 2.5px solid #0dcaf0;
        background: linear-gradient(90deg, #e0f7fa 0%, #f8fafc 100%);
        box-shadow: 0 4px 24px #0dcaf055, 0 2px 8px #e9ecef;
        position: relative;
        overflow: hidden;
        min-height: 50vh;
        height: 50vh;
        z-index: 1;
    }
    .diamond-ad-card .main-img { box-shadow: 0 2px 12px #0dcaf055; }
    .diamond-thumbs .diamond-thumb { border: 2px solid #fff; border-radius: 8px; background: #f8fafc; font-weight: bold; display: flex; align-items: center; justify-content: center; }
    .diamond-thumb-more { background: #0dcaf0; color: #fff; width: 48px; height: 48px; display: flex; align-items: center; justify-content: center; border-radius: 8px; font-size: 1.1em; box-shadow: 0 2px 8px #0dcaf055; }
    .diamond-effect { position: absolute; top:0;left:0;width:100%;height:100%; pointer-events:none; background: linear-gradient(120deg,rgba(13,202,240,0.08) 0%,rgba(255,255,255,0.0) 100%); z-index:0; }
    .gold-ad-card {
        border: 2px solid #ffc107;
        background: linear-gradient(90deg, #fffbe6 0%, #f8fafc 100%);
        box-shadow: 0 2px 12px #ffc10755, 0 2px 8px #e9ecef;
        position: relative;
        overflow: hidden;
        min-height: 260px;
        display: flex;
        flex-direction: column;
    }
    .gold-img-wrap {
        width: 100%;
        height: 170px;
        background: #fffbe6;
        border-radius: 12px 12px 0 0;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .gold-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 12px 12px 0 0;
        display: block;
    }
    .gold-effect { position: absolute; top:0;left:0;width:100%;height:100%; pointer-events:none; background: linear-gradient(120deg,rgba(255,193,7,0.08) 0%,rgba(255,255,255,0.0) 100%); z-index:0; }
    .ad-content-html { font-size: 1.08em; line-height: 1.7; background: #f8f9fa; border-radius: 8px; padding: 0.5rem 1rem; margin-bottom: 0.5rem; max-height: 220px; overflow: hidden; }
    .clickable-card { cursor: pointer; transition: box-shadow 0.2s; }
    .clickable-card:focus, .clickable-card:hover { box-shadow: 0 0 0 3px #0d6efd33, 0 2px 8px #e9ecef; outline: none; }
    .diamond-gallery { display: flex; height:320px; min-height:320px; }
    .main-img-rect {
        border-radius: 12px;
        overflow: hidden;
        background: #f8fafc;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .main-img-rect .main-img {
        width: auto;
        height: 100%;
        max-width: 100%;
        object-fit: contain;
        object-position: center;
        display: block;
    }
    .side-thumbs-grid { display: grid; grid-template-columns: 1fr 1fr; grid-template-rows: 1fr 1fr; grid-auto-rows: 1fr; gap: 2px; width: 50%; height: 100%; }
    .side-thumb-rect { border-radius: 8px; margin-bottom: 0; position: relative; background: #f8fafd; width: 100%; height: 100%; aspect-ratio: 1/1; overflow: hidden; display: flex; align-items: center; justify-content: center; }
    .side-thumb-img { border-radius: 8px; width: 100%; height: 100%; object-fit: cover; object-position: center; display: block; }
    .thumb-overlay { position: absolute; top:0;left:0;width:100%;height:100%; background:rgba(0,0,0,0.45); color:#fff; display:flex; align-items:center; justify-content:center; font-size:1.2em; font-weight:bold; }
    .gold-ad-card-v2 {
        border: none;
        border-radius: 18px;
        background: linear-gradient(90deg, #fffbe6 0%, #f8fafc 100%);
        box-shadow: 0 2px 16px #ffc10733, 0 2px 8px #e9ecef;
        overflow: hidden;
        min-height: 370px;
        height: 370px;
        display: flex;
        flex-direction: column;
        transition: box-shadow 0.2s;
    }
    .gold-img-wrap-v2 {
        width: 100%;
        height: 200px;
        background: #fffbe6;
        border-radius: 18px 18px 0 0;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .gold-img-v2 {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 18px 18px 0 0;
        display: block;
    }
    .gold-title-v2 {
        font-size: 1.22em;
        font-weight: bold;
        color: #d32f2f;
        white-space: normal;
        overflow: visible;
        text-overflow: unset;
        line-height: 1.25;
        margin-bottom: 0.2em;
    }
    .gold-content-v2 {
        font-size: 1.08em;
        line-height: 1.7;
        background: #fffde7;
        border-radius: 8px;
        padding: 0.7rem 1rem;
        max-height: 90px;
        min-height: 60px;
        overflow: hidden;
        color: #444;
    }
    .gold-info-v2 {
        border-top: 1px solid #ffe082;
        padding-top: 0.3rem;
        font-size: 1em;
    }
    .bronze-ad-card {
        border: 1.5px solid #bdbdbd;
        border-radius: 14px;
        background: linear-gradient(90deg, #f8fafc 0%, #f5f5f5 100%);
        box-shadow: 0 2px 8px #bdbdbd22, 0 2px 8px #e9ecef;
        overflow: hidden;
        min-height: 320px;
        display: flex;
        flex-direction: column;
        transition: box-shadow 0.2s;
    }
    .bronze-img-wrap {
        width: 100%;
        height: 160px;
        background: #f5f5f5;
        border-radius: 14px 14px 0 0;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .bronze-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 14px 14px 0 0;
        display: block;
    }
    .bronze-title-v2 {
        font-size: 1.08em;
        font-weight: bold;
        color: #333;
        white-space: normal;
        overflow: visible;
        text-overflow: unset;
        line-height: 1.25;
        margin-bottom: 0.2em;
    }
    .bronze-content-v2 {
        font-size: 1em;
        line-height: 1.6;
        background: #f8f9fa;
        border-radius: 8px;
        padding: 0.5rem 0.8rem;
        max-height: 48px;
        min-height: 32px;
        overflow: hidden;
        color: #444;
    }
    .bronze-info-v2 {
        border-top: 1px solid #e0e0e0;
        padding-top: 0.3rem;
        font-size: 0.98em;
    }
    .gold-price-v2, .bronze-price-v2, .diamond-price-v2 {
        font-size: 1.08em;
        font-weight: 600;
        color: #388e3c;
        margin-bottom: 0.2em;
    }
    .silver-ad-card {
        border: 1.5px solid #b0bec5;
        border-radius: 14px;
        background: linear-gradient(90deg, #f8fafc 0%, #eceff1 100%);
        box-shadow: 0 2px 8px #b0bec522, 0 2px 8px #e9ecef;
        overflow: hidden;
        min-height: 320px;
        display: flex;
        flex-direction: column;
        transition: box-shadow 0.2s;
    }
    .silver-img-wrap {
        width: 100%;
        height: 160px;
        background: #eceff1;
        border-radius: 14px 14px 0 0;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .silver-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 14px 14px 0 0;
        display: block;
    }
    .silver-title-v2 {
        font-size: 1.08em;
        font-weight: bold;
        color: #607d8b;
        white-space: normal;
        overflow: visible;
        text-overflow: unset;
        line-height: 1.25;
        margin-bottom: 0.2em;
    }
    .silver-content-v2 {
        font-size: 1em;
        line-height: 1.6;
        background: #f5f7fa;
        border-radius: 8px;
        padding: 0.5rem 0.8rem;
        max-height: 48px;
        min-height: 32px;
        overflow: hidden;
        color: #444;
    }
    .silver-info-v2 {
        border-top: 1px solid #b0bec5;
        padding-top: 0.3rem;
        font-size: 0.98em;
    }
    .silver-price-v2 {
        font-size: 1.08em;
        font-weight: 600;
        color: #607d8b;
        margin-bottom: 0.2em;
    }
</style>
