@model IEnumerable<RentalService.Models.Room>
@{
    ViewData["Title"] = "Room Search";
    var buildings = ViewBag.Buildings as List<RentalService.Models.Building>;
    var selectedBuildingId = ViewBag.SelectedBuildingId as Guid?;
}
<link rel="stylesheet" href="~/css/room-cards.css" />
<div class="d-flex flex-wrap gap-2 mb-3">
    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary"><i class="fa-solid fa-gauge-high"></i> Dashboard</a>
    <a href="@Url.Action("Index", "Favorites")" class="btn btn-outline-danger"><i class="fa-solid fa-heart"></i> Favorites</a>
    <a href="@Url.Action("Index", "BookingRequests")" class="btn btn-outline-info"><i class="fa-solid fa-envelope-open-text"></i> Bookings</a>
    <a href="@Url.Action("Index", "ViewAppointments")" class="btn btn-outline-success"><i class="fa-solid fa-calendar-check"></i> Appointments</a>
</div>
<h2>Room Search</h2>
<form method="get" class="mb-4 p-3 rounded shadow-sm bg-light">
    <div class="row g-2 align-items-end">
        <div class="col-md-3">
            <label class="form-label mb-1">Location</label>
            <input type="text" name="location" class="form-control" placeholder="Location" value="@Context.Request.Query["location"]" />
        </div>
        <div class="col-md-2">
            <label class="form-label mb-1">Min Price</label>
            <input type="number" name="minPrice" class="form-control" placeholder="Min Price" value="@Context.Request.Query["minPrice"]" />
        </div>
        <div class="col-md-2">
            <label class="form-label mb-1">Max Price</label>
            <input type="number" name="maxPrice" class="form-control" placeholder="Max Price" value="@Context.Request.Query["maxPrice"]" />
        </div>
        <div class="col-md-3">
            <label class="form-label mb-1">Building</label>
            <select name="buildingId" class="form-select">
                <option value="">All</option>
                @if (buildings != null)
                {
                    foreach (var b in buildings)
                    {
                        if (selectedBuildingId == b.Id)
                        {
                            <option value="@b.Id" selected>@b.Name</option>
                        }
                        else
                        {
                            <option value="@b.Id">@b.Name</option>
                        }
                    }
                }
            </select>
        </div>
        <div class="col-md-2 d-grid">
            <label class="form-label mb-1" style="visibility:hidden">Search</label>
            <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
</form>
<div class="row g-4">
@foreach (var room in Model)
{
    <div class="col-12 col-md-6 col-lg-4">
        <div class="room-card">
            @if (room.RoomImages != null && room.RoomImages.Count > 0 && !string.IsNullOrEmpty(room.RoomImages[0].ImageUrl))
            {
                <img src="@room.RoomImages[0].ImageUrl" alt="Room Image" class="room-card-img" onerror="this.onerror=null;this.src='/images/no-image.png';" />
            }
            else if (room.Images != null && room.Images.Count > 0 && !string.IsNullOrEmpty(room.Images[0].ImageUrl))
            {
                <img src="@room.Images[0].ImageUrl" alt="Room Image" class="room-card-img" onerror="this.onerror=null;this.src='/images/no-image.png';" />
            }
            else
            {
                <img src="/images/no-image.png" alt="No Image" class="room-card-img" />
            }
            <div class="room-card-body">
                <div class="room-card-title d-flex align-items-center justify-content-between">
                    <span>@room.Name</span>
                    @if (room.Reviews != null && room.Reviews.Count > 0)
                    {
                        var avg = room.Reviews.Average(r => r.Rating);
                        <span class="ms-2 small text-warning">@Html.Raw(RenderStars(avg)) <span class="text-muted">@avg.ToString("0.0")</span></span>
                    }
                </div>
                <div class="room-card-location"><i class="fa-solid fa-location-dot"></i> @room.Building?.Location</div>
                <div class="room-card-price">@room.Price.ToString("C0")</div>
                <div class="room-card-amenities">
                    @if (room.Amenities != null && room.Amenities.Count > 0)
                    {
                        <span><i class="fa-solid fa-list"></i> @string.Join(", ", room.Amenities.Take(3).Select(a => a.Name))</span>
                        @if (room.Amenities.Count > 3)
                        {
                            <span> +@((room.Amenities.Count - 3)) more</span>
                        }
                    }
                </div>
                <div class="room-card-link">
                    <a href="@Url.Action("Details", new { id = room.Id })" class="btn btn-outline-primary btn-sm">Details</a>
                </div>
            </div>
        </div>
    </div>
}
</div>
@if (!Model.Any())
{
    <div class="alert alert-info mt-4">No rooms found.</div>
}
@functions {
    private string RenderStars(double rating)
    {
        int full = (int)rating;
        bool half = (rating - full) >= 0.5;
        int empty = 5 - full - (half ? 1 : 0);
        var html = string.Concat(Enumerable.Repeat("<i class='fa fa-star text-warning'></i>", full));
        if (half) html += "<i class='fa fa-star-half-alt text-warning'></i>";
        html += string.Concat(Enumerable.Repeat("<i class='fa fa-star text-secondary'></i>", empty));
        return html;
    }
}
