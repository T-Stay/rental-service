@model IEnumerable<RentalService.Models.ViewAppointment>
@{
    ViewData["Title"] = "Lịch hẹn xem phòng (chủ nhà)";
    var buildings = ViewBag.Buildings as List<RentalService.Models.Building>;
    var selectedBuildingId = ViewBag.SelectedBuildingId as Guid?;
    var rooms = ViewBag.Rooms as List<RentalService.Models.Room>;
    var selectedRoomId = ViewBag.SelectedRoomId as Guid?;
    var status = ViewBag.Status as string;
    var sort = ViewBag.Sort as string ?? "";
}
<div class="d-flex justify-content-between align-items-center mb-3">
    <h2 class="fw-bold text-success mb-0"><i class="fa-solid fa-calendar-day me-2"></i>Lịch hẹn xem phòng (chủ nhà)</h2>
    <a href="@Url.Action("Index", "HostDashboard")" class="btn btn-outline-secondary"><i class="fa-solid fa-gauge-high"></i> Bảng điều khiển</a>
</div>
<form method="get" class="mb-3 row g-2 align-items-end">
    <div class="col-auto">
        <select name="buildingId" class="form-select" id="buildingSelect">
            <option value="">Tất cả tòa nhà</option>
            @if (buildings != null)
            {
                foreach (var b in buildings)
                {
                    <option value="@b.Id" selected="@(selectedBuildingId == b.Id ? "selected" : null)">@b.Name</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <select name="roomId" class="form-select" id="roomSelect">
            <option value="">Tất cả Phòng</option>
            @if (rooms != null)
            {
                foreach (var r in rooms)
                {
                    <option value="@r.Id" selected="@(selectedRoomId == r.Id ? "selected" : null)" data-building="@r.BuildingId">@r.Name</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <select name="status" class="form-select">
            <option value="">Tất cả trạng thái</option>
            @foreach (var st in Enum.GetNames(typeof(RentalService.Models.ViewAppointmentStatus)))
            {
                <option value="@st" selected="@(status == st ? "selected" : null)">@st</option>
            }
        </select>
    </div>
    <div class="col-auto">
        <select name="sort" class="form-select">
            <option value="" selected="@(string.IsNullOrEmpty(sort) ? "selected" : null)">Mới nhất</option>
            <option value="date_asc" selected="@(sort == "date_asc" ? "selected" : null)">Thời gian tăng dần</option>
            <option value="date_desc" selected="@(sort == "date_desc" ? "selected" : null)">Thời gian giảm dần</option>
        </select>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-outline-info">Lọc</button>
    </div>
</form>
<div class="card shadow-sm">
    <div class="card-body p-0">
        <table class="table table-hover mb-0">
            <thead class="table-light">
                <tr>
                    <th>Phòng</th>
                    <th>Khách hàng</th>
                    <th>Thời gian</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody>
            @if (Model.Any())
            {
                foreach (var appt in Model)
                {
                    <tr>
                        <td>
                            @if (appt.Room != null)
                            {
                                <a href="@Url.Action("Details", "Rooms", new { id = appt.Room.Id })" target="_blank">@appt.Room.Name</a>
                            }
                            else
                            {
                                <span class="text-muted">Không xác định</span>
                            }
                        </td>
                        <td>@appt.User?.Name</td>
                        <td>@appt.AppointmentTime.ToString("g")</td>
                        <td>
                            @if (appt.Status == RentalService.Models.ViewAppointmentStatus.Pending)
                            {
                                <span class="badge bg-warning">Đang chờ</span>
                            }
                            else if (appt.Status == RentalService.Models.ViewAppointmentStatus.Confirmed)
                            {
                                <span class="badge bg-success">Đã xác nhận</span>
                            }
                            else if (appt.Status == RentalService.Models.ViewAppointmentStatus.Cancelled)
                            {
                                <span class="badge bg-danger">Đã hủy</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@appt.Status</span>
                            }
                        </td>
                        <td>
                            @if (appt.Status == RentalService.Models.ViewAppointmentStatus.Pending)
                            {
                                <form asp-action="UpdateAppointmentStatus" method="post" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@appt.Id" />
                                    <button type="submit" name="action" value="accept" class="btn btn-success btn-sm me-1">Chấp nhận</button>
                                    <button type="submit" name="action" value="decline" class="btn btn-danger btn-sm me-1">Từ chối</button>
                                </form>
                            }
                            <a href="@Url.Action("HostDetails", "ViewAppointments", new { id = appt.Id })" class="btn btn-outline-info btn-sm">Chi tiết</a>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="5">
                            @if (appt.User != null && appt.User.ContactInformations != null && appt.User.ContactInformations.Count > 0)
                            {
                                <div>
                                    <strong>Thông tin liên hệ khách hàng:</strong>
                                    <ul>
                                        @foreach (var c in appt.User.ContactInformations)
                                        {
                                            if (c.Type.ToString() == "FacebookLink")
                                            {
                                                <li><strong>@c.Type:</strong> <a href="@c.Data" target="_blank" rel="noopener"><i class="fab fa-facebook fa-lg me-1"></i>Xem hồ sơ</a></li>
                                            }
                                            else if (c.Type.ToString() == "Email")
                                            {
                                                <li><strong>@c.Type:</strong> @c.Data <button class="copy-btn" onclick="copyToClipboard('@c.Data')" title="Sao chép email"><i class="fa fa-copy"></i></button></li>
                                            }
                                            else if (c.Type.ToString() == "PhoneNumber")
                                            {
                                                <li><strong>@c.Type:</strong> @c.Data <button class="copy-btn" onclick="copyToClipboard('@c.Data')" title="Sao chép số điện thoại"><i class="fa fa-copy"></i></button></li>
                                            }
                                            else
                                            {
                                                <li><strong>@c.Type:</strong> @c.Data</li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="5" class="text-center text-muted">Không tìm thấy lịch hẹn nào.</td></tr>
            }
            </tbody>
        </table>
    </div>
</div>
<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text);
        if (!document.getElementById('copyToast')) {
            var toast = document.createElement('div');
            toast.id = 'copyToast';
            toast.innerText = 'Đã sao chép!';
            toast.style.position = 'fixed';
            toast.style.left = '50%';
            toast.style.bottom = '30px';
            toast.style.transform = 'translateX(-50%)';
            toast.style.background = 'var(--gray-dark)';
            toast.style.color = 'var(--text-light)';
            toast.style.padding = '8px 16px';
            toast.style.borderRadius = '4px';
            toast.style.zIndex = 9999;
            toast.style.opacity = 0;
            toast.style.transition = 'opacity 0.3s';
            document.body.appendChild(toast);
        }
        var toast = document.getElementById('copyToast');
        toast.style.opacity = 1;
        toast.style.visibility = 'visible';
        setTimeout(function () {
            toast.style.opacity = 0;
            toast.style.visibility = 'hidden';
        }, 1500);
    }

    // Tự động filter phòng theo tòa nhà
    document.addEventListener('DOMContentLoaded', function () {
        var buildingSelect = document.getElementById('buildingSelect');
        var roomSelect = document.getElementById('roomSelect');
        if (buildingSelect && roomSelect) {
            buildingSelect.addEventListener('change', function () {
                var buildingId = this.value;
                for (var i = 0; i < roomSelect.options.length; i++) {
                    var opt = roomSelect.options[i];
                    if (!opt.value) continue;
                    if (!buildingId || opt.getAttribute('data-building') === buildingId) {
                        opt.style.display = '';
                    } else {
                        opt.style.display = 'none';
                        if (opt.selected) roomSelect.selectedIndex = 0;
                    }
                }
            });
            // Trigger filter on page load if building is selected
            if (buildingSelect.value) {
                var event = new Event('change');
                buildingSelect.dispatchEvent(event);
            }
        }
    });
</script>
<style>
    .copy-btn {
        border: none;
        background: none;
        color: var(--main-blue);
        cursor: pointer;
        margin-left: 0.5rem;
    }
</style>
